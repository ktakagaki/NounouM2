(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     52483,       1298]
NotebookOptionsPosition[     48080,       1137]
NotebookOutlinePosition[     48459,       1153]
CellTagsIndexPosition[     48416,       1150]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Dealing with ranges", "Title",
 CellChangeTimes->{{3.6000809243998537`*^9, 3.6000809304792013`*^9}, {
  3.600085572902733*^9, 3.6000855761169167`*^9}, {3.600966907188642*^9, 
  3.600966908713729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "NounouM2`"}]], "Input",
 CellChangeTimes->{{3.599981355217822*^9, 3.599981360831143*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Welcome to NounouM2, the Mathematica interface to nounou!\"\
\>"], "Print",
 CellChangeTimes->{3.59998283866967*^9, 3.600079861428055*^9, 
  3.600080148868496*^9, 3.6000802398226976`*^9, 3.600080747324725*^9, 
  3.600080935823507*^9, 3.600081385748241*^9, 3.6000822668036346`*^9, 
  3.6000827495052433`*^9, 3.6000831069936905`*^9, 3.6000833905039062`*^9, 
  3.6000843614004383`*^9, 3.600084550300243*^9, 3.600084595493828*^9, 
  3.60008480567885*^9, 3.6000849385144477`*^9, 3.6000850296226587`*^9, 
  3.60008630051435*^9, 3.600087493107562*^9, 3.6000880942899475`*^9, 
  3.600089141780861*^9, 3.600096258824932*^9, 3.6000966555216217`*^9, 
  3.600966993605585*^9, 3.6009673370132265`*^9, 3.6009684151008897`*^9, 
  3.60097022989369*^9}],

Cell[BoxData["\<\"(last updated:  Sun 9 Feb 2014 22:30:18)\"\>"], "Print",
 CellChangeTimes->{3.59998283866967*^9, 3.600079861428055*^9, 
  3.600080148868496*^9, 3.6000802398226976`*^9, 3.600080747324725*^9, 
  3.600080935823507*^9, 3.600081385748241*^9, 3.6000822668036346`*^9, 
  3.6000827495052433`*^9, 3.6000831069936905`*^9, 3.6000833905039062`*^9, 
  3.6000843614004383`*^9, 3.600084550300243*^9, 3.600084595493828*^9, 
  3.60008480567885*^9, 3.6000849385144477`*^9, 3.6000850296226587`*^9, 
  3.60008630051435*^9, 3.600087493107562*^9, 3.6000880942899475`*^9, 
  3.600089141780861*^9, 3.600096258824932*^9, 3.6000966555216217`*^9, 
  3.600966993605585*^9, 3.6009673370132265`*^9, 3.6009684151008897`*^9, 
  3.60097022989569*^9}],

Cell[BoxData["\<\"<<Set JLink` java stack size to 3072Mb>>\"\>"], "Print",
 CellChangeTimes->{3.59998283866967*^9, 3.600079861428055*^9, 
  3.600080148868496*^9, 3.6000802398226976`*^9, 3.600080747324725*^9, 
  3.600080935823507*^9, 3.600081385748241*^9, 3.6000822668036346`*^9, 
  3.6000827495052433`*^9, 3.6000831069936905`*^9, 3.6000833905039062`*^9, 
  3.6000843614004383`*^9, 3.600084550300243*^9, 3.600084595493828*^9, 
  3.60008480567885*^9, 3.6000849385144477`*^9, 3.6000850296226587`*^9, 
  3.60008630051435*^9, 3.600087493107562*^9, 3.6000880942899475`*^9, 
  3.600089141780861*^9, 3.600096258824932*^9, 3.6000966555216217`*^9, 
  3.600966993605585*^9, 3.6009673370132265`*^9, 3.6009684151008897`*^9, 
  3.600970229931692*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowJavaConsole", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6000823207327194`*^9, 3.600082344927103*^9}, {
  3.600082380437134*^9, 3.6000823839433346`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "com", ".", "wolfram", ".", "jlink", ".", "ui", ".", "ConsoleWindow"}], 
    "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject7242878380146689]], "Output",
 CellChangeTimes->{3.6000823858544436`*^9, 3.6000827541265078`*^9, 
  3.600083110672901*^9, 3.6000833917939806`*^9, 3.600084363211542*^9, 
  3.6000845516193185`*^9, 3.6000845973929367`*^9, 3.600084807725967*^9, 
  3.6000849402755485`*^9, 3.6000850309847364`*^9, 3.6000863021544437`*^9, 
  3.6000874944256372`*^9, 3.600088095592022*^9, 3.600089143149939*^9, 
  3.600096260622035*^9, 3.600096657046709*^9, 3.6009669954406896`*^9, 
  3.6009673422185245`*^9, 3.600968416664979*^9, 3.600970231329772*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Java Compiled Scala Structure Tests (140209)\
\>", "Section",
 CellChangeTimes->{{3.600080758210348*^9, 3.6000807668348413`*^9}, {
  3.6000809486372395`*^9, 3.600080948805249*^9}, {3.600967938978657*^9, 
  3.6009679448099904`*^9}, {3.6009680137619343`*^9, 3.6009680206573286`*^9}}],

Cell["\<\
Conclusion : should make class FrameRange in nounou._, not in the package \
object, which makes it impossible to find via Java (140209)\
\>", "Text",
 CellChangeTimes->{{3.6009701811609025`*^9, 3.6009702103475723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempPackage$", " ", "=", " ", 
  RowBox[{"LoadJavaClass", "[", "\"\<nounou.package$\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6000866688554173`*^9, 3.6000866756728077`*^9}, {
  3.600086709057717*^9, 3.6000867249606266`*^9}, {3.6000875011070194`*^9, 
  3.6000875240643325`*^9}, {3.6000882128087263`*^9, 3.600088215980908*^9}, {
  3.6000883144055376`*^9, 3.6000883285763483`*^9}, {3.600967386666066*^9, 
  3.600967386808075*^9}, {3.600967979261961*^9, 3.6009679875724363`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"nounou", ".", "package$"}], ",", "<>", "]"}],
  JLink`JavaClass["nounou.package$", 9, {
    JLink`JVM["vm1"]}, 1, "nounou`package$`", False, True]]], "Output",
 CellChangeTimes->{{3.6000866693454456`*^9, 3.6000866772899*^9}, 
   3.600086710283787*^9, 3.6000875043002024`*^9, 3.6000881000382767`*^9, 
   3.6000882172859826`*^9, {3.6000883173777075`*^9, 3.600088329063376*^9}, 
   3.6009669977118196`*^9, 3.6009673459657383`*^9, 3.600967387736128*^9, 
   3.600967992284706*^9, 3.600968427101576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "tempPackage$", "]"}]], "Input",
 CellChangeTimes->{{3.6009679950608644`*^9, 3.600968000840195*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"void forJava(int, int, int, scala.Function1)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"nounou.package$FrameRange \
rangeInclusiveToFrameRange(scala.collection.immutable.Range$Inclusive)\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6009680012112164`*^9, 3.600968428483655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempPackage$FrameRange", " ", "=", " ", 
  RowBox[{
  "LoadJavaClass", "[", "\"\<nounou.package$FrameRange\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6000866688554173`*^9, 3.6000866756728077`*^9}, {
  3.600086709057717*^9, 3.6000867249606266`*^9}, {3.6000875011070194`*^9, 
  3.6000875240643325`*^9}, {3.6000882128087263`*^9, 3.600088215980908*^9}, {
  3.6000883144055376`*^9, 3.6000883285763483`*^9}, {3.600967386666066*^9, 
  3.600967386808075*^9}, {3.600967979261961*^9, 3.6009679875724363`*^9}, {
  3.6009680489479465`*^9, 3.600968059253536*^9}, {3.600968456705269*^9, 
  3.600968458137351*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"nounou", ".", "package$FrameRange"}], ",", "<>", "]"}],
  JLink`JavaClass["nounou.package$FrameRange", 10, {
    JLink`JVM["vm1"]}, 1, "nounou`package$FrameRange`", False, 
   True]]], "Output",
 CellChangeTimes->{{3.6000866693454456`*^9, 3.6000866772899*^9}, 
   3.600086710283787*^9, 3.6000875043002024`*^9, 3.6000881000382767`*^9, 
   3.6000882172859826`*^9, {3.6000883173777075`*^9, 3.600088329063376*^9}, 
   3.6009669977118196`*^9, 3.6009673459657383`*^9, 3.600967387736128*^9, 
   3.600967992284706*^9, 3.60096806020059*^9, 3.600968458801389*^9, 
   3.600968613812255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Constructors", "[", "tempPackage$FrameRange", "]"}]], "Input",
 CellChangeTimes->{{3.600968723110507*^9, 3.6009687253096323`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"package$FrameRange(int, int, int, boolean)\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.600968725646652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "tempPackage$FrameRange", "]"}]], "Input",
 CellChangeTimes->{{3.6009679950608644`*^9, 3.600968000840195*^9}, 
   3.600968063411774*^9, 3.6009684626016064`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"static nounou.package$FrameRange$All All()\"\>"},
     {"\<\"int endMarker()\"\>"},
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"scala.collection.immutable.Range getRange(int)\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"boolean isAll()\"\>"},
     {"\<\"boolean isNoOverhangs(int)\"\>"},
     {"\<\"int last(int)\"\>"},
     {"\<\"int length(int)\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"int postLength(int)\"\>"},
     {"\<\"int preLength(int)\"\>"},
     {"\<\"int start()\"\>"},
     {"\<\"int start(int)\"\>"},
     {"\<\"int step()\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"scala.collection.immutable.Range$Inclusive validRange(int)\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"},
     {"\<\"static boolean $lessinit$greater$default$4()\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6009680012112164`*^9, 3.6009680641688175`*^9, {3.600968459701441*^9, 
   3.600968462887623*^9}, 3.6009686148633156`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempPackage$FrameRange$All", " ", "=", " ", 
  RowBox[{
  "LoadJavaClass", "[", "\"\<nounou.package$FrameRange$All\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6000866688554173`*^9, 3.6000866756728077`*^9}, {
  3.600086709057717*^9, 3.6000867249606266`*^9}, {3.6000875011070194`*^9, 
  3.6000875240643325`*^9}, {3.6000882128087263`*^9, 3.600088215980908*^9}, {
  3.6000883144055376`*^9, 3.6000883285763483`*^9}, {3.600967386666066*^9, 
  3.600967386808075*^9}, {3.600967979261961*^9, 3.6009679875724363`*^9}, {
  3.6009680489479465`*^9, 3.600968059253536*^9}, {3.600968092940463*^9, 
  3.6009680955226107`*^9}, {3.600968581113385*^9, 3.600968584608585*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"nounou", ".", "package$FrameRange$All"}], ",", "<>", "]"}],
  JLink`JavaClass["nounou.package$FrameRange$All", 11, {
    JLink`JVM["vm1"]}, 10, "nounou`package$FrameRange$All`", False, 
   True]]], "Output",
 CellChangeTimes->{{3.6000866693454456`*^9, 3.6000866772899*^9}, 
   3.600086710283787*^9, 3.6000875043002024`*^9, 3.6000881000382767`*^9, 
   3.6000882172859826`*^9, {3.6000883173777075`*^9, 3.600088329063376*^9}, 
   3.6009669977118196`*^9, 3.6009673459657383`*^9, 3.600967387736128*^9, 
   3.600967992284706*^9, 3.60096806020059*^9, 3.6009680973647165`*^9, 
   3.60096858556964*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "tempPackage$FrameRange$All", "]"}]], "Input",
 CellChangeTimes->{{3.6009679950608644`*^9, 3.600968000840195*^9}, 
   3.600968063411774*^9, {3.600968099763853*^9, 3.600968100271882*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"static nounou.package$FrameRange$All All()\"\>"},
     {"\<\"int endMarker()\"\>"},
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"scala.collection.immutable.Range getRange(int)\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"boolean isAll()\"\>"},
     {"\<\"boolean isNoOverhangs(int)\"\>"},
     {"\<\"int last(int)\"\>"},
     {"\<\"int length(int)\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"int postLength(int)\"\>"},
     {"\<\"int preLength(int)\"\>"},
     {"\<\"int start()\"\>"},
     {"\<\"int start(int)\"\>"},
     {"\<\"int step()\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"scala.collection.immutable.Range$Inclusive validRange(int)\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"},
     {"\<\"static boolean $lessinit$greater$default$4()\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6009680012112164`*^9, 3.6009680641688175`*^9, 
  3.6009681004998956`*^9, 3.60096858644969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempPackage$FrameRange$$anonfun$1", " ", "=", " ", 
  RowBox[{
  "LoadJavaClass", "[", "\"\<nounou.package$FrameRange$$anonfun$1\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6000866688554173`*^9, 3.6000866756728077`*^9}, {
  3.600086709057717*^9, 3.6000867249606266`*^9}, {3.6000875011070194`*^9, 
  3.6000875240643325`*^9}, {3.6000882128087263`*^9, 3.600088215980908*^9}, {
  3.6000883144055376`*^9, 3.6000883285763483`*^9}, {3.600967386666066*^9, 
  3.600967386808075*^9}, {3.600967979261961*^9, 3.6009679875724363`*^9}, {
  3.6009680489479465`*^9, 3.600968059253536*^9}, {3.600968092940463*^9, 
  3.6009680955226107`*^9}, {3.600968581113385*^9, 3.600968584608585*^9}, {
  3.600968644303999*^9, 3.600968660208909*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"nounou", ".", "package$FrameRange$$anonfun$1"}], ",", "<>", "]"}],
  JLink`JavaClass["nounou.package$FrameRange$$anonfun$1", 12, {
    JLink`JVM["vm1"]}, 13, "nounou`package$FrameRange$$anonfun$1`", False, 
   True]]], "Output",
 CellChangeTimes->{{3.6000866693454456`*^9, 3.6000866772899*^9}, 
   3.600086710283787*^9, 3.6000875043002024`*^9, 3.6000881000382767`*^9, 
   3.6000882172859826`*^9, {3.6000883173777075`*^9, 3.600088329063376*^9}, 
   3.6009669977118196`*^9, 3.6009673459657383`*^9, 3.600967387736128*^9, 
   3.600967992284706*^9, 3.60096806020059*^9, 3.6009680973647165`*^9, 
   3.60096858556964*^9, 3.6009686612409678`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "tempPackage$FrameRange$$anonfun$1", "]"}]], "Input",
 CellChangeTimes->{{3.6009679950608644`*^9, 3.600968000840195*^9}, 
   3.600968063411774*^9, {3.600968099763853*^9, 3.600968100271882*^9}, 
   3.6009686649601808`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Object apply()\"\>"},
     {"\<\"String apply()\"\>"},
     {"\<\"byte apply$mcB$sp()\"\>"},
     {"\<\"char apply$mcC$sp()\"\>"},
     {"\<\"double apply$mcD$sp()\"\>"},
     {"\<\"float apply$mcF$sp()\"\>"},
     {"\<\"int apply$mcI$sp()\"\>"},
     {"\<\"long apply$mcJ$sp()\"\>"},
     {"\<\"short apply$mcS$sp()\"\>"},
     {"\<\"void apply$mcV$sp()\"\>"},
     {"\<\"boolean apply$mcZ$sp()\"\>"},
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6009680012112164`*^9, 3.6009680641688175`*^9, 
  3.6009681004998956`*^9, 3.60096858644969*^9, 3.6009686657372255`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Load (upd 140209)", "Section",
 CellChangeTimes->{{3.600080758210348*^9, 3.6000807668348413`*^9}, {
  3.6000809486372395`*^9, 3.600080948805249*^9}, {3.60097036958568*^9, 
  3.600970376497075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nnj", " ", "=", " ", 
  RowBox[{"LoadJavaClass", "[", "\"\<nounou.NNJ\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6000866688554173`*^9, 3.6000866756728077`*^9}, {
  3.600086709057717*^9, 3.6000867249606266`*^9}, {3.6000875011070194`*^9, 
  3.6000875240643325`*^9}, {3.6000882128087263`*^9, 3.600088215980908*^9}, {
  3.6000883144055376`*^9, 3.6000883285763483`*^9}, {3.600967386666066*^9, 
  3.600967386808075*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"nounou", ".", "NNJ"}], ",", "<>", "]"}],
  JLink`JavaClass["nounou.NNJ", 0, {
    JLink`JVM["vm1"]}, 1, "nounou`NNJ`", False, True]]], "Output",
 CellChangeTimes->{{3.6000866693454456`*^9, 3.6000866772899*^9}, 
   3.600086710283787*^9, 3.6000875043002024`*^9, 3.6000881000382767`*^9, 
   3.6000882172859826`*^9, {3.6000883173777075`*^9, 3.600088329063376*^9}, 
   3.6009669977118196`*^9, 3.6009673459657383`*^9, 3.600967387736128*^9, 
   3.600970234705965*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Constructors", "[", "nnj", "]"}]], "Input",
 CellChangeTimes->{{3.6000883300274315`*^9, 3.6000883333086185`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", "}"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6000883336056356`*^9, 3.6009673892712154`*^9, 
  3.6009702358160286`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "nnj", "]"}]], "Input",
 CellChangeTimes->{{3.600088103868496*^9, 3.6000881087147727`*^9}, {
  3.6000881443188095`*^9, 3.6000881760396233`*^9}, {3.6000882210861998`*^9, 
  3.6000882214762225`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"static nounou.FrameRange frames(int, int)\"\>"},
     {"\<\"static nounou.FrameRange frames(int, int, int)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"static int get(int)\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6000881090247903`*^9, {3.6000881469509597`*^9, 3.6000881762996387`*^9}, 
   3.600088222169262*^9, 3.600088485457321*^9, 3.6009673900642605`*^9, 
   3.6009702368220863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "NNJ", "]"}]], "Input",
 CellChangeTimes->{{3.6009702557941713`*^9, 3.6009702618055153`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"static nounou.FrameRange frames(int, int)\"\>"},
     {"\<\"static nounou.FrameRange frames(int, int, int)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"static int get(int)\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.600970262158535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Contexts", "[", "]"}]], "Input",
 CellChangeTimes->{{3.600088628817521*^9, 3.6000886564911036`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Algebra`\"\>", ",", "\<\"Algebraics`Private`\"\>", 
   ",", "\<\"Algebra`Polynomial`\"\>", 
   ",", "\<\"Algebra`PolynomialPowerMod`\"\>", 
   ",", "\<\"AlphaIntegration`\"\>", ",", "\<\"AlphaIntegration`Dump`\"\>", 
   ",", "\<\"Assumptions`\"\>", ",", "\<\"AssumptionsDump`\"\>", 
   ",", "\<\"AugmentedData`\"\>", ",", "\<\"BinningUtilities`\"\>", 
   ",", "\<\"BooleanAlgebra`Private`\"\>", ",", "\<\"BoxForm`\"\>", 
   ",", "\<\"BoxFormat`\"\>", ",", "\<\"BrowserCategoryLoad`\"\>", 
   ",", "\<\"CalculateScan`Packages`Get1DPolarPlotRange`\"\>", 
   ",", "\<\"CalculateScan`Packages`Get2DRange`\"\>", 
   ",", "\<\"CalculateUtilities`SuggestPlotRanges`Private`\"\>", 
   ",", "\<\"Calendar`\"\>", ",", "\<\"Calendar`Legacy`\"\>", 
   ",", "\<\"CCodeGenerator`\"\>", ",", "\<\"CCompilerDriver`\"\>", 
   ",", "\<\"Cell$$986`\"\>", ",", "\<\"Charting`\"\>", 
   ",", "\<\"ClusterAnalysis`FindClusters`\"\>", ",", "\<\"Compile`\"\>", 
   ",", "\<\"CompileDefinition`Private`\"\>", ",", "\<\"Compiler`\"\>", 
   ",", "\<\"ComplexAnalysis`\"\>", ",", "\<\"Component`\"\>", 
   ",", "\<\"ComputationalGeometry`Dump`\"\>", 
   ",", "\<\"ComputationalGeometry`Methods`\"\>", 
   ",", "\<\"ComputationalGeometry`Surface`\"\>", 
   ",", "\<\"com`wolfram`jlink`MathJFrame`\"\>", 
   ",", "\<\"com`wolfram`jlink`MathJFrame`JPrivate`\"\>", 
   ",", "\<\"com`wolfram`jlink`ObjectMaker`\"\>", 
   ",", "\<\"com`wolfram`jlink`ui`ConsoleWindow`\"\>", 
   ",", "\<\"com`wolfram`jlink`ui`ConsoleWindow`JPrivate`\"\>", 
   ",", "\<\"com`wolfram`jlink`Utils`\"\>", ",", "\<\"Conditional`\"\>", 
   ",", "\<\"ConsoleWindow`\"\>", ",", "\<\"Container`\"\>", 
   ",", "\<\"Control`\"\>", ",", "\<\"Control`AffineModelUtilities`\"\>", 
   ",", "\<\"Control`CommonDump`\"\>", 
   ",", "\<\"Control`ConnectionsDump`\"\>", 
   ",", "\<\"Control`PCSModelsDump`\"\>", 
   ",", "\<\"Control`PlotUtilities`\"\>", 
   ",", "\<\"Control`PoleAssignmentDump`\"\>", 
   ",", "\<\"Control`PropertiesDump`\"\>", 
   ",", "\<\"Control`RealizationsDump`\"\>", ",", "\<\"ControlSystems`\"\>", 
   ",", "\<\"Control`TimeDelaysDump`\"\>", ",", "\<\"Conversion`\"\>", 
   ",", "\<\"Convert`TeX`\"\>", ",", "\<\"CUDAInformation`\"\>", 
   ",", "\<\"Data`\"\>", ",", "\<\"Database`\"\>", 
   ",", "\<\"DatabaseLink`\"\>", ",", "\<\"DatabaseLink`Information`\"\>", 
   ",", "\<\"DataPaclets`\"\>", ",", "\<\"DataPaclets`CalendarDataDump`\"\>", 
   ",", "\<\"DataPaclets`ColorData`\"\>", 
   ",", "\<\"DataPaclets`CommonDump`\"\>", 
   ",", "\<\"DataPaclets`Dictionary`\"\>", ",", "\<\"Debug`\"\>", 
   ",", "\<\"Debugger`\"\>", ",", "\<\"Deconvolve`\"\>", 
   ",", "\<\"Developer`\"\>", ",", "\<\"Devices`\"\>", 
   ",", "\<\"Devices`Audio`\"\>", ",", "\<\"Devices`Developer`\"\>", 
   ",", "\<\"Discrete`\"\>", ",", "\<\"Discrete`DivisorSumDump`\"\>", 
   ",", "\<\"DiscreteMath`DecisionDiagram`\"\>", 
   ",", "\<\"Documentation`\"\>", ",", "\<\"DocumentationTools`\"\>", 
   ",", "\<\"DocumentationTools`Utilities`\"\>", ",", "\<\"DragAndDrop`\"\>", 
   ",", "\<\"DrawPolarAxes`\"\>", ",", "\<\"DSolve`\"\>", 
   ",", "\<\"DynamicDump`\"\>", ",", "\<\"EquationalLogic`\"\>", 
   ",", "\<\"EquationalLogic`Private`\"\>", ",", "\<\"Experimental`\"\>", 
   ",", "\<\"Experimental`NumericalFunction`\"\>", ",", "\<\"Explore`\"\>", 
   ",", "\<\"Explore`ExploreDump`\"\>", ",", "\<\"ExternalService`\"\>", 
   ",", "\<\"ExternalService`MailSettings`\"\>", 
   ",", "\<\"ExternalService`Security`\"\>", 
   ",", "\<\"ExternalService`URIToolsDump`\"\>", 
   ",", "\<\"ExternalService`Utilities`\"\>", ",", "\<\"Extras`\"\>", 
   ",", "\<\"Factor`\"\>", ",", "\<\"FE`\"\>", 
   ",", "\<\"FE`PredictiveInterfaceDump`\"\>", ",", "\<\"FE`Private`\"\>", 
   ",", "\<\"FEPrivate`\"\>", ",", "\<\"Finance`FinancialDerivativeDump`\"\>",
    ",", "\<\"FindMinimum`\"\>", ",", "\<\"FindRoot`\"\>", 
   ",", "\<\"FittedModels`\"\>", ",", "\<\"FittedModels`FittedModelDump`\"\>",
    ",", "\<\"FittedModels`FittedModelDump`Private`\"\>", 
   ",", "\<\"FittedModels`FittedModelsCommonDump`\"\>", 
   ",", "\<\"FittedModels`GLMDump`\"\>", 
   ",", "\<\"FittedModels`LinearFitDump`\"\>", 
   ",", "\<\"FittedModels`NonlinearFitDump`\"\>", ",", "\<\"Format`\"\>", 
   ",", "\<\"Frame`\"\>", ",", "\<\"FrontEnd`\"\>", 
   ",", "\<\"FrontEnd`Private`\"\>", ",", "\<\"GenerateConditions`\"\>", 
   ",", "\<\"GeometricFunctions`\"\>", 
   ",", "\<\"GeometricFunctions`BernsteinBasis`\"\>", 
   ",", "\<\"GeometricFunctions`BSplineBasis`\"\>", 
   ",", "\<\"GeometricFunctions`CardinalBSplineBasis`\"\>", 
   ",", "\<\"Geometry`\"\>", ",", "\<\"Geometry`BSPTree`\"\>", 
   ",", "\<\"Geometry`Developer`\"\>", ",", "\<\"Geometry`Mesh`\"\>", 
   ",", "\<\"Geometry`Spatial`\"\>", ",", "\<\"GIS`DMSDump`\"\>", 
   ",", "\<\"Global`\"\>", ",", "\<\"GraphComputation`\"\>", 
   ",", "\<\"GraphComputation`GraphCoversDump`\"\>", 
   ",", "\<\"GraphComputation`GraphEditDump`\"\>", ",", "\<\"Graphics`\"\>", 
   ",", "\<\"GraphicsArray`\"\>", ",", "\<\"Graphics`Glyphs`\"\>", 
   ",", "\<\"Graphics`Glyphs`GlyphsDump`\"\>", 
   ",", "\<\"Graphics`Legacy`\"\>", ",", "\<\"Graphics`ListParserDump`\"\>", 
   ",", "\<\"Graphics`MapPlotDump`\"\>", ",", "\<\"Graphics`Mesh`\"\>", 
   ",", "\<\"Graphics`Mesh`Developer`\"\>", ",", "\<\"Graphics`Mesh`FEM`\"\>",
    ",", "\<\"Graphics`Mesh`MeshDump`\"\>", ",", "\<\"Graphics`Mesh`SoS`\"\>",
    ",", "\<\"Graphics`PerformanceTuningDump`\"\>", 
   ",", "\<\"Graphics`Region`\"\>", ",", "\<\"Graphics`ReliefPlotDump`\"\>", 
   ",", "\<\"Graphics`Units`\"\>", ",", "\<\"GridDump`\"\>", 
   ",", "\<\"GroebnerBasis`\"\>", ",", "\<\"GroebnerBasis`GroebnerWalk`\"\>", 
   ",", "\<\"GroebnerGCD`\"\>", ",", "\<\"GroupTheory`PermutationGroups`\"\>",
    ",", "\<\"GroupTheory`PermutationGroupsDump`\"\>", 
   ",", "\<\"GroupTheory`PermutationGroups`Private`\"\>", 
   ",", "\<\"GroupTheory`Symmetries`\"\>", ",", "\<\"GroupTheory`Tools`\"\>", 
   ",", "\<\"HierarchicalClustering`\"\>", ",", "\<\"Histogram`\"\>", 
   ",", "\<\"Holonomic`\"\>", ",", "\<\"Holonomic`Developer`\"\>", 
   ",", "\<\"Holonomic`Private`\"\>", ",", "\<\"HTTPClient`Private`\"\>", 
   ",", "\<\"HypergeometricLogDump`\"\>", ",", "\<\"Image`\"\>", 
   ",", "\<\"Image`ColorOperationsDump`\"\>", 
   ",", "\<\"Image`CompositionOperationsDump`\"\>", 
   ",", "\<\"Image`ExternalOCRDump`\"\>", ",", "\<\"Image`FilteringDump`\"\>",
    ",", "\<\"Image`HDRImageProcessingDump`\"\>", 
   ",", "\<\"Image`ImageDump`\"\>", ",", "\<\"Image`ImportExportDump`\"\>", 
   ",", "\<\"Image`ITK`\"\>", ",", "\<\"Image`LocalProcessingDump`\"\>", 
   ",", "\<\"Image`MatricesDump`\"\>", ",", "\<\"Image`MeasurementsDump`\"\>",
    ",", "\<\"Image`MorphologicalOperationsDump`\"\>", 
   ",", "\<\"Image`PatternRecognitionDump`\"\>", 
   ",", "\<\"Image`RegistrationDump`\"\>", 
   ",", "\<\"Image`SegmentationDump`\"\>", 
   ",", "\<\"Image`SpatialOperationsDump`\"\>", 
   ",", "\<\"Image`StatisticalDescriptionsDump`\"\>", 
   ",", "\<\"ImageTransformation`\"\>", ",", "\<\"Image`TransformsDump`\"\>", 
   ",", "\<\"IMAQ`\"\>", ",", "\<\"IMAQ`Utilities`\"\>", 
   ",", "\<\"ImportExport`\"\>", ",", "\<\"ImportExport`Encodings`\"\>", 
   ",", "\<\"ImportExport`FileUtilities`\"\>", 
   ",", "\<\"ImportExport`Private`\"\>", ",", "\<\"Inpaint`\"\>", 
   ",", "\<\"Integrate`\"\>", ",", "\<\"Integrate`Elliptic`\"\>", 
   ",", "\<\"Integrate`ImproperDump`\"\>", 
   ",", "\<\"Integrate`NLtheoremDump`\"\>", ",", "\<\"Internal`\"\>", 
   ",", "\<\"Internal`ProcessEquations`\"\>", ",", "\<\"Java`\"\>", 
   ",", "\<\"java`awt`Component`\"\>", 
   ",", "\<\"java`awt`Component`JPrivate`\"\>", 
   ",", "\<\"java`awt`Container`\"\>", 
   ",", "\<\"java`awt`Container`JPrivate`\"\>", 
   ",", "\<\"java`awt`Frame`\"\>", ",", "\<\"java`awt`Frame`JPrivate`\"\>", 
   ",", "\<\"java`awt`Window`\"\>", ",", "\<\"java`awt`Window`JPrivate`\"\>", 
   ",", "\<\"java`lang`Object`JPrivate`\"\>", 
   ",", "\<\"java`lang`System`\"\>", 
   ",", "\<\"java`util`GregorianCalendar`\"\>", 
   ",", "\<\"javax`swing`JFrame`\"\>", 
   ",", "\<\"javax`swing`JFrame`JPrivate`\"\>", ",", "\<\"JFrame`\"\>", 
   ",", "\<\"JLink`\"\>", ",", "\<\"JLink`ArgumentTests`Private`\"\>", 
   ",", "\<\"JLink`CallJava`Private`\"\>", 
   ",", "\<\"JLink`Debug`Private`\"\>", 
   ",", "\<\"JLink`EvaluateTo`Private`\"\>", 
   ",", "\<\"JLink`Exceptions`Private`\"\>", 
   ",", "\<\"JLink`FrontEndServer`Private`\"\>", 
   ",", "\<\"JLink`Information`\"\>", 
   ",", "\<\"JLink`InstallJava`Private`\"\>", 
   ",", "\<\"JLink`JavaBlock`Private`\"\>", 
   ",", "\<\"JLink`Java`Private`\"\>", ",", "\<\"JLink`JVMs`Private`\"\>", 
   ",", "\<\"JLink`MakeJavaObject`Private`\"\>", 
   ",", "\<\"JLink`Misc`Private`\"\>", ",", "\<\"JLink`Objects`vm1`\"\>", 
   ",", "\<\"JLink`Package`\"\>", ",", "\<\"JLink`Private`\"\>", 
   ",", "\<\"JLink`Reflection`Private`\"\>", 
   ",", "\<\"JLink`Sharing`Private`\"\>", ",", "\<\"Language`\"\>", 
   ",", "\<\"Legending`\"\>", ",", "\<\"LibraryLink`\"\>", 
   ",", "\<\"Limit`\"\>", ",", "\<\"LinearAlgebra`\"\>", 
   ",", "\<\"LinearAlgebra`BLAS`\"\>", 
   ",", "\<\"LinearAlgebra`DeconvolveDump`\"\>", 
   ",", "\<\"LinearAlgebra`Fourier`\"\>", 
   ",", "\<\"LinearAlgebra`Implementations`\"\>", 
   ",", "\<\"LinearAlgebra`Internal`\"\>", 
   ",", "\<\"LinearAlgebra`LAPACK`\"\>", 
   ",", "\<\"LinearAlgebra`LinearSolve`\"\>", 
   ",", "\<\"LinearAlgebra`MatrixExp`\"\>", 
   ",", "\<\"LinearAlgebra`Private`\"\>", ",", "\<\"Manipulate`\"\>", 
   ",", "\<\"Manipulate`Dump`\"\>", ",", "\<\"MarkovProcesses`\"\>", 
   ",", "\<\"MathJFrame`\"\>", ",", "\<\"MathLink`\"\>", 
   ",", "\<\"MathLink`Information`\"\>", ",", "\<\"MatrixFunction`\"\>", 
   ",", "\<\"MatrixLog`\"\>", ",", "\<\"MatrixPower`\"\>", 
   ",", "\<\"Method`\"\>", ",", "\<\"MLFS`\"\>", 
   ",", "\<\"MultivariateResultant`\"\>", ",", "\<\"NDSolve`\"\>", 
   ",", "\<\"NDSolve`Chasing`\"\>", 
   ",", "\<\"NDSolve`Chasing`Implementation`\"\>", 
   ",", "\<\"NDSolve`EventLocator`\"\>", ",", "\<\"NDSolve`FEM`\"\>", 
   ",", "\<\"NDSolve`FEM`FEMErrorCheckingDump`\"\>", 
   ",", "\<\"NDSolve`FEM`ShapeFunctionsDump`\"\>", 
   ",", "\<\"NDSolve`FiniteDifferenceDerivativeFunction`\"\>", 
   ",", "\<\"NDSolve`MethodOfLines`\"\>", 
   ",", "\<\"NDSolve`MultistepDump`\"\>", ",", "\<\"NDSolve`Newton`\"\>", 
   ",", "\<\"NDSolve`ProcessEquations`\"\>", 
   ",", "\<\"NDSolve`Shooting`Implementation`\"\>", 
   ",", "\<\"NDSolve`StateData`\"\>", ",", "\<\"NETLink`\"\>", 
   ",", "\<\"NETLink`Information`\"\>", ",", "\<\"NETLink`Package`\"\>", 
   ",", "\<\"Network`GraphPlot`\"\>", ",", "\<\"NIntegrate`\"\>", 
   ",", "\<\"NIntegrate`OscNInt`\"\>", ",", "\<\"NMinimize`\"\>", 
   ",", "\<\"NNJ`\"\>", ",", "\<\"NotebookCompatibility`\"\>", 
   ",", "\<\"NotebookTools`\"\>", ",", "\<\"NotebookTools`UtilitiesDump`\"\>",
    ",", "\<\"NounouM2`\"\>", ",", "\<\"nounou`NNJ`\"\>", 
   ",", "\<\"nounou`NNJ`JPrivate`\"\>", ",", "\<\"NProduct`\"\>", 
   ",", "\<\"NRoots`\"\>", ",", "\<\"NRoots`Private`\"\>", 
   ",", "\<\"NSum`\"\>", ",", "\<\"NumberTheory`\"\>", 
   ",", "\<\"NumberTheory`PrimePowerQDump`\"\>", 
   ",", "\<\"NumberTheory`RandomPrimeDump`\"\>", 
   ",", "\<\"NumberTheory`SquaresRDump`\"\>", ",", "\<\"NumericalMath`\"\>", 
   ",", "\<\"OpenCLInformation`\"\>", ",", "\<\"Optimization`\"\>", 
   ",", "\<\"Optimization`FindFit`\"\>", 
   ",", "\<\"Optimization`LinearProgramming`\"\>", 
   ",", "\<\"Optimization`LinearProgramming`Private`\"\>", 
   ",", "\<\"Optimization`LineSearch`\"\>", 
   ",", "\<\"Optimization`MPSData`\"\>", ",", "\<\"OutputFormsDump`\"\>", 
   ",", "\<\"OutputSizeLimit`\"\>", ",", "\<\"OutputSizeLimit`Dump`\"\>", 
   ",", "\<\"Package`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"PacletManager`Collection`Private`\"\>", 
   ",", "\<\"PacletManager`Documentation`Private`\"\>", 
   ",", "\<\"PacletManager`Extension`Private`\"\>", 
   ",", "\<\"PacletManager`Information`\"\>", 
   ",", "\<\"PacletManager`LayoutDocsCollection`Private`\"\>", 
   ",", "\<\"PacletManager`Manager`Private`\"\>", 
   ",", "\<\"PacletManager`MemoryCollection`Private`\"\>", 
   ",", "\<\"PacletManager`Package`\"\>", 
   ",", "\<\"PacletManager`Packer`Private`\"\>", 
   ",", "\<\"PacletManager`Paclet`Private`\"\>", 
   ",", "\<\"PacletManager`Private`\"\>", 
   ",", "\<\"PacletManager`Services`Private`\"\>", 
   ",", "\<\"PacletManager`Utils`Private`\"\>", 
   ",", "\<\"PacletManager`Zip`Private`\"\>", ",", "\<\"PacletTools`\"\>", 
   ",", "\<\"Parallel`Debug`\"\>", ",", "\<\"Parallel`Developer`\"\>", 
   ",", "\<\"Parallel`Information`\"\>", ",", "\<\"Parallel`Palette`\"\>", 
   ",", "\<\"Parallel`Palette`Private`\"\>", ",", "\<\"Parallel`Private`\"\>",
    ",", "\<\"Parallel`Settings`\"\>", ",", "\<\"Parallel`Static`\"\>", 
   ",", "\<\"Periodic`\"\>", ",", "\<\"Periodic`Private`\"\>", 
   ",", "\<\"PlanetaryAstronomy`\"\>", ",", "\<\"Predictions`\"\>", 
   ",", "\<\"Predictions`Private`\"\>", ",", "\<\"PredictionStartupDump`\"\>",
    ",", "\<\"PredictiveInterface`\"\>", 
   ",", "\<\"PredictiveInterfaceDump`\"\>", 
   ",", "\<\"PredictiveInterfaceLoader`Private`\"\>", ",", "\<\"Product`\"\>",
    ",", "\<\"Proxy`\"\>", ",", "\<\"Quantifier`\"\>", 
   ",", "\<\"QuantityUnits`\"\>", ",", "\<\"QuantityUnits`Private`\"\>", 
   ",", "\<\"Random`\"\>", ",", "\<\"Random`Private`\"\>", 
   ",", "\<\"RandomProcesses`\"\>", ",", "\<\"RandomProcesses`Library`\"\>", 
   ",", "\<\"RandomProcesses`Simulation`\"\>", 
   ",", "\<\"RandomProcesses`TimeSeriesCommon`\"\>", ",", "\<\"Reduce`\"\>", 
   ",", "\<\"Region`\"\>", ",", "\<\"Region`Private`\"\>", 
   ",", "\<\"RegularChains`Private`\"\>", ",", "\<\"Reliability`Library`\"\>",
    ",", "\<\"ResourceLocator`\"\>", ",", "\<\"ResourceLocator`Private`\"\>", 
   ",", "\<\"RomanNumerals`\"\>", ",", "\<\"RootReduce`Private`\"\>", 
   ",", "\<\"RootsDump`\"\>", ",", "\<\"RSolve`\"\>", 
   ",", "\<\"RuntimeTools`\"\>", ",", "\<\"RuntimeTools`Dump`\"\>", 
   ",", "\<\"SequenceLimit`\"\>", ",", "\<\"Series`Private`\"\>", 
   ",", "\<\"Signal`\"\>", ",", "\<\"Signal`FilteringDump`\"\>", 
   ",", "\<\"SimilarityScoreMatrices`\"\>", ",", "\<\"Simplify`\"\>", 
   ",", "\<\"Simplify`Private`\"\>", ",", "\<\"Solve`\"\>", 
   ",", "\<\"Solvers`\"\>", ",", "\<\"Sound`\"\>", 
   ",", "\<\"SparseArray`\"\>", ",", "\<\"SparseArray`Private`\"\>", 
   ",", "\<\"SparseArray`SparseBlockArray`\"\>", 
   ",", "\<\"SpecialFunctions`\"\>", ",", "\<\"SpecialFunctions`Private`\"\>",
    ",", "\<\"Statistics`\"\>", 
   ",", "\<\"Statistics`DataDistributionUtilities`\"\>", 
   ",", "\<\"Statistics`Library`\"\>", 
   ",", "\<\"Statistics`QuantityUtilities`\"\>", 
   ",", "\<\"Statistics`SurvivalAnalysisTools`\"\>", 
   ",", "\<\"Statistics`TsallisDistributionsDump`\"\>", 
   ",", "\<\"Statistics`Utilities`\"\>", ",", "\<\"StochasticCalculus`\"\>", 
   ",", "\<\"StringPattern`\"\>", ",", "\<\"StringPattern`Dump`\"\>", 
   ",", "\<\"StringPattern`Lexer`\"\>", ",", "\<\"StructuredArray`\"\>", 
   ",", "\<\"StructureDetection`\"\>", ",", "\<\"StyleManager`\"\>", 
   ",", "\<\"Sum`\"\>", ",", "\<\"SurfaceGraphics`\"\>", 
   ",", "\<\"SurfaceGraphics`Methods`\"\>", ",", "\<\"SymbolicTensors`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"System`BesselParamDerivativesDump`\"\>", 
   ",", "\<\"System`BinaryReadDump`\"\>", ",", "\<\"System`CompileDump`\"\>", 
   ",", "\<\"System`ComplexExpand`\"\>", 
   ",", "\<\"System`Convert`CommonDump`\"\>", 
   ",", "\<\"System`ConvertersDump`\"\>", 
   ",", "\<\"System`Convert`TableDump`\"\>", ",", "\<\"System`CrossDump`\"\>",
    ",", "\<\"System`DateStringDump`\"\>", ",", "\<\"System`Dump`\"\>", 
   ",", "\<\"System`Dump`ArgumentCount`\"\>", 
   ",", "\<\"System`Dump`GeoLocationDump`\"\>", 
   ",", "\<\"System`Dump`ParameterValidation`\"\>", 
   ",", "\<\"System`Environment`\"\>", ",", "\<\"System`FEDump`\"\>", 
   ",", "\<\"System`FileExportListDump`\"\>", 
   ",", "\<\"System`GroebnerBasisDump`\"\>", ",", "\<\"System`InfoDump`\"\>", 
   ",", "\<\"System`InputOutput`\"\>", 
   ",", "\<\"System`IntegerPartitionsDump`\"\>", 
   ",", "\<\"System`InternalNormalDump`\"\>", 
   ",", "\<\"System`InterpolatingFunction`\"\>", ",", "\<\"System`Java`\"\>", 
   ",", "\<\"System`LanguageEnhancements`\"\>", 
   ",", "\<\"System`LaplaceTransformDump`\"\>", 
   ",", "\<\"System`Parallel`\"\>", ",", "\<\"System`PowerReduceDump`\"\>", 
   ",", "\<\"System`Private`\"\>", ",", "\<\"System`Private`charFuns`\"\>", 
   ",", "\<\"System`SeriesDump`\"\>", ",", "\<\"System`Utilities`\"\>", 
   ",", "\<\"TableView`\"\>", ",", "\<\"TemporalData`\"\>", 
   ",", "\<\"TimeZone`\"\>", ",", "\<\"TreeBrowse`\"\>", 
   ",", "\<\"Typeset`\"\>", ",", "\<\"ValueTrack`\"\>", 
   ",", "\<\"Visualization`\"\>", ",", "\<\"Visualization`Core`\"\>", 
   ",", "\<\"Visualization`Interpolation`\"\>", 
   ",", "\<\"Visualization`LegendsDump`\"\>", 
   ",", "\<\"Visualization`Utilities`\"\>", 
   ",", "\<\"Visualization`VectorFields`\"\>", 
   ",", "\<\"Visualization`VectorFields`VectorFieldsDump`\"\>", 
   ",", "\<\"Wavelets`\"\>", ",", "\<\"Wavelets`LiftingFilter`\"\>", 
   ",", "\<\"Wavelets`WaveletData`\"\>", 
   ",", "\<\"Wavelets`WaveletListPlot`\"\>", 
   ",", "\<\"Wavelets`WaveletPlot2D`\"\>", 
   ",", "\<\"Wavelets`WaveletScalogram`\"\>", 
   ",", "\<\"Wavelets`WaveletUtilities`\"\>", ",", "\<\"WebServices`\"\>", 
   ",", "\<\"WebServices`Information`\"\>", ",", "\<\"Window`\"\>", 
   ",", "\<\"WrappersDump`\"\>", ",", "\<\"XML`\"\>", 
   ",", "\<\"XML`MathML`\"\>", ",", "\<\"XML`MathML`Symbols`\"\>", 
   ",", "\<\"XML`NotebookML`\"\>", ",", "\<\"XML`Parser`\"\>", 
   ",", "\<\"XML`RSS`\"\>", ",", "\<\"XML`SVG`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.600088649225688*^9, 3.600088656714116*^9}, 
   3.600970277847433*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData["NNJ`framesAll"], "Input",
 CellChangeTimes->{{3.600970294162366*^9, 3.6009703046829677`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "FrameRange$All"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject28509447483555841]], "Output",
 CellChangeTimes->{3.60097030560902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NNJ`frames", "[", 
  RowBox[{"0", ",", " ", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6009703145505323`*^9, 3.600970323468042*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "FrameRange"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject29232495731933185]], "Output",
 CellChangeTimes->{3.6009703240330744`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Span object with adapter (old)", "Section",
 CellChangeTimes->{{3.600080758210348*^9, 3.6000807668348413`*^9}, {
  3.6000809486372395`*^9, 3.600080948805249*^9}, {3.600088405698759*^9, 
  3.600088407737876*^9}, {3.600096061715658*^9, 3.600096066651941*^9}, {
  3.600970364445386*^9, 3.600970365945472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", " ", "=", 
  RowBox[{"NNJ`Span", "[", 
   RowBox[{"0", ",", 
    RowBox[{"512", "*", "10"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.600096068054021*^9, 3.6000960716292257`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "data", ".", "Span"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject6488842244718593]], "Output",
 CellChangeTimes->{
  3.6000960729453006`*^9, 3.6000962630451736`*^9, {3.600096652552452*^9, 
   3.600096662467019*^9}, 3.600099094017096*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getRange", "[", 
    RowBox[{"512", "*", "20"}], "]"}], "@", 
   RowBox[{"length", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6000991049537215`*^9, 3.600099141687823*^9}}],

Cell[BoxData["5121"], "Output",
 CellChangeTimes->{{3.6000991197415676`*^9, 3.600099141914836*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getRange", "[", 
    RowBox[{"512", "*", "20"}], "]"}], "@", 
   RowBox[{"start", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600099181768115*^9, 3.600099183808232*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6000991841512513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getRange", "[", 
    RowBox[{"512", "*", "20"}], "]"}], "@", 
   RowBox[{"end", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6000991049537215`*^9, 3.6000991723025737`*^9}}],

Cell[BoxData["5121"], "Output",
 CellChangeTimes->{{3.6000991564836693`*^9, 3.6000991724715834`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{"length", "[", 
   RowBox[{"512", "*", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.600096085156999*^9}, {
  3.600096272723727*^9, 3.6000962731967545`*^9}, {3.6000963710373507`*^9, 
  3.6000963715803814`*^9}}],

Cell[BoxData["5121"], "Output",
 CellChangeTimes->{
  3.600096085861039*^9, {3.600096268521487*^9, 3.6000962749518547`*^9}, 
   3.6000963719894047`*^9, 3.6000966632740655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{"getMinIndex", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.6000961100944257`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.600096096387642*^9, 3.600096110546451*^9}, 
   3.600096673262637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{"getMaxIndex", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.600096116165773*^9}}],

Cell[BoxData["5120"], "Output",
 CellChangeTimes->{3.6000961165457945`*^9, 3.6000966739406757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getActualStartEnd", "[", "10", "]"}], "@", 
   RowBox[{"toString", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.600096151509794*^9}}],

Cell[BoxData["\<\"(0,5120)\"\>"], "Output",
 CellChangeTimes->{{3.600096137496993*^9, 3.600096151808811*^9}, 
   3.600096326956829*^9, 3.6000966796710033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getActualStartEnd", "[", "512", "]"}], "@", 
   RowBox[{"toString", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.600096151509794*^9}, {
  3.6000963281778994`*^9, 3.600096331003061*^9}}],

Cell[BoxData["\<\"(0,5120)\"\>"], "Output",
 CellChangeTimes->{3.6000963320661216`*^9, 3.600096680608057*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6000967071735764`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", " ", "=", 
  RowBox[{"NNJ`Span", "[", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.600096068054021*^9, 3.6000960716292257`*^9}, {
  3.600096187221837*^9, 3.6000961874618506`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "data", ".", "Span"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject31301382954811393]], "Output",
 CellChangeTimes->{3.6000960729453006`*^9, 3.600096188052884*^9, 
  3.6000966861673746`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{"getMaxIndex", "[", "5125", "]"}]}]], "Input",
 CellChangeTimes->{3.600096717708179*^9}],

Cell[BoxData["5124"], "Output",
 CellChangeTimes->{3.6000967183202143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getActualStartEnd", "[", "5125", "]"}], "@", 
   RowBox[{"toString", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.6000961734220476`*^9}}],

Cell[BoxData["\<\"(0,5124)\"\>"], "Output",
 CellChangeTimes->{3.6000961895499697`*^9, 3.6000966884855075`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.600096704774439*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", " ", "=", 
  RowBox[{"NNJ`Span", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "0", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.600096068054021*^9, 3.6000960716292257`*^9}, {
  3.600096187221837*^9, 3.6000961874618506`*^9}, {3.6000967249555936`*^9, 
  3.6000967349691663`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "data", ".", "Span"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject25878292586299393]], "Output",
 CellChangeTimes->{3.6000960729453006`*^9, 3.600096188052884*^9, 
  3.6000966861673746`*^9, 3.6000967357272096`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempSpan", "@", 
  RowBox[{
   RowBox[{"getActualStartEnd", "[", "5125", "]"}], "@", 
   RowBox[{"toString", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600096074611396*^9, 3.6000961734220476`*^9}}],

Cell[BoxData["\<\"(5124,0)\"\>"], "Output",
 CellChangeTimes->{
  3.6000961895499697`*^9, 3.6000966884855075`*^9, {3.6000967366892643`*^9, 
   3.6000967416215467`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.600099081266367*^9}]
}, Closed]]
}, Open  ]]
},
WindowSize->{716, 867},
WindowMargins->{{Automatic, 334}, {88, Automatic}},
Magnification->1.100000023841858,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 206, 3, 99, "Title"],
Cell[CellGroupData[{
Cell[810, 29, 119, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[954, 35, 754, 11, 24, "Print"],
Cell[1711, 48, 735, 10, 24, "Print"],
Cell[2449, 60, 736, 10, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3234, 76, 182, 3, 32, "Input"],
Cell[3419, 81, 779, 14, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4235, 100, 291, 5, 86, "Section"],
Cell[4529, 107, 229, 4, 53, "Text"],
Cell[CellGroupData[{
Cell[4783, 115, 504, 7, 32, "Input"],
Cell[5290, 124, 572, 10, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5899, 139, 139, 2, 32, "Input"],
Cell[6041, 143, 1179, 29, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7257, 177, 627, 10, 32, "Input"],
Cell[7887, 189, 654, 12, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8578, 206, 154, 2, 32, "Input"],
Cell[8735, 210, 637, 18, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9409, 233, 199, 3, 32, "Input"],
Cell[9611, 238, 1690, 42, 442, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11338, 285, 687, 11, 53, "Input"],
Cell[12028, 298, 668, 12, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12733, 315, 225, 3, 32, "Input"],
Cell[12961, 320, 1661, 41, 442, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14659, 366, 750, 12, 53, "Input"],
Cell[15412, 380, 713, 12, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16162, 397, 260, 4, 32, "Input"],
Cell[16425, 403, 1487, 38, 388, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[17961, 447, 203, 3, 53, "Section"],
Cell[CellGroupData[{
Cell[18189, 454, 442, 7, 32, "Input"],
Cell[18634, 463, 535, 10, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19206, 478, 137, 2, 32, "Input"],
Cell[19346, 482, 202, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19585, 493, 236, 4, 32, "Input"],
Cell[19824, 499, 1293, 32, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21154, 536, 132, 2, 32, "Input"],
Cell[21289, 540, 1138, 29, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22464, 574, 124, 2, 32, "Input"],
Cell[22591, 578, 17794, 296, 3532, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[40422, 879, 107, 1, 25, "Input"],
Cell[40532, 882, 274, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40843, 893, 160, 3, 32, "Input"],
Cell[41006, 898, 273, 6, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41328, 910, 312, 4, 86, "Section"],
Cell[CellGroupData[{
Cell[41665, 918, 226, 5, 32, "Input"],
Cell[41894, 925, 378, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42309, 938, 240, 6, 32, "Input"],
Cell[42552, 946, 99, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42688, 952, 237, 6, 32, "Input"],
Cell[42928, 960, 72, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43037, 966, 239, 6, 32, "Input"],
Cell[43279, 974, 101, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43417, 980, 286, 6, 32, "Input"],
Cell[43706, 988, 176, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43919, 996, 163, 3, 32, "Input"],
Cell[44085, 1001, 120, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44242, 1008, 161, 3, 32, "Input"],
Cell[44406, 1013, 99, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44542, 1019, 222, 5, 32, "Input"],
Cell[44767, 1026, 159, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44963, 1033, 274, 6, 32, "Input"],
Cell[45240, 1041, 109, 1, 33, "Output"]
}, Open  ]],
Cell[45364, 1045, 89, 1, 53, "Input"],
Cell[CellGroupData[{
Cell[45478, 1050, 269, 6, 32, "Input"],
Cell[45750, 1058, 329, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46116, 1070, 139, 3, 32, "Input"],
Cell[46258, 1075, 75, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46370, 1081, 226, 5, 32, "Input"],
Cell[46599, 1088, 111, 1, 33, "Output"]
}, Open  ]],
Cell[46725, 1092, 87, 1, 53, "Input"],
Cell[CellGroupData[{
Cell[46837, 1097, 342, 8, 32, "Input"],
Cell[47182, 1107, 353, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47572, 1119, 226, 5, 32, "Input"],
Cell[47801, 1126, 168, 3, 33, "Output"]
}, Open  ]],
Cell[47984, 1132, 68, 1, 32, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
