(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[      9787,        279]
NotebookOptionsPosition[      8861,        240]
NotebookOutlinePosition[      9203,        255]
CellTagsIndexPosition[      9160,        252]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "NounouM2`"}]], "Input",
 CellChangeTimes->{{3.599981355217822*^9, 3.599981360831143*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Welcome to NounouM2, the Mathematica interface to nounou!\"\
\>"], "Print",
 CellChangeTimes->{3.59998283866967*^9}],

Cell[BoxData["\<\"(last updated:  Wed 29 Jan 2014 12:13:50)\"\>"], "Print",
 CellChangeTimes->{3.5999828386706705`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"StringCases", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"JavaClassPath", "[", "]"}], "]"}], ",", 
    RowBox[{"___", "~~", "\"\<nounou\>\"", "~~", "___"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5999829812588263`*^9, 3.5999830858668094`*^9}}],

Cell[BoxData[
 RowBox[{"{", \
"\<\"C:\\\\Users\\\\Kenta\\\\AppData\\\\Roaming\\\\Mathematica\\\\\
Applications\\\\NounouM2\\\\Java\\\\nounou.jar\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.599982984487011*^9, {3.5999830241752806`*^9, 3.599983086119824*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nounou", "=", 
  RowBox[{"JavaNew", "[", "\"\<nounou.DataReader\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.5999828894585752`*^9, 3.599982925082613*^9}, {
  3.599983117882641*^9, 3.5999831391778584`*^9}, {3.599983204784611*^9, 
  3.5999832180723715`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "DataReader"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject32342099399540737]], "Output",
 CellChangeTimes->{{3.599983124811037*^9, 3.599983139772893*^9}, 
   3.599983219552456*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "nounou", "]"}]], "Input",
 CellChangeTimes->{{3.599983221805585*^9, 3.599983231721152*^9}, {
  3.5999832636739793`*^9, 3.5999832644430237`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"void clearAll()\"\>"},
     {"\<\"void clearDat()\"\>"},
     {"\<\"void clearDatA()\"\>"},
     {"\<\"void clearDatL()\"\>"},
     {"\<\"void clearDatM()\"\>"},
     {"\<\"void clearEve()\"\>"},
     {"\<\"void clearHead()\"\>"},
     {"\<\"nounou.data.xdata.XData dat()\"\>"},
     {"\<\"nounou.data.xdata.XData datA()\"\>"},
     {"\<\"void datA_$eq(nounou.data.xdata.XData)\"\>"},
     {"\<\"nounou.data.xlayout.XLayout datL()\"\>"},
     {"\<\"void datL_$eq(nounou.data.xlayout.XLayout)\"\>"},
     {"\<\"nounou.data.discrete.XEvents datM()\"\>"},
     {"\<\"void datM_$eq(nounou.data.discrete.XEvents)\"\>"},
     {"\<\"void dat_$eq(nounou.data.xdata.XData)\"\>"},
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"scala.collection.immutable.Vector eve()\"\>"},
     {"\<\"void eve_$eq(scala.collection.immutable.Vector)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"nounou.data.XHeader head()\"\>"},
     {"\<\"void head_$eq(nounou.data.XHeader)\"\>"},
     {"\<\"void load()\"\>"},
     {"\<\"void loadImpl(nounou.data.X)\"\>"},
     {"\<\"void load(java.io.File)\"\>"},
     {"\<\"void load(java.io.File[])\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5999832320401697`*^9, 3.5999832647230396`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nounouDat", "=", 
  RowBox[{"nounou", "@", 
   RowBox[{"dat", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.59998329480276*^9, 3.599983319881194*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"nounou", ".", "data", ".", "xdata", ".", "XDataNull$"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject23519779897737217]], "Output",
 CellChangeTimes->{3.5999833219953156`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "nounouDat", "]"}]], "Input",
 CellChangeTimes->{{3.599983326642581*^9, 3.5999833299227686`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"double absGain()\"\>"},
     {"\<\"double absOffset()\"\>"},
     {"\<\"String absUnit()\"\>"},
     {"\<\"int channelCount()\"\>"},
     {"\<\"scala.collection.immutable.Vector channelName()\"\>"},
     {"\<\"scala.collection.immutable.Vector endTimestamp()\"\>"},
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"double framesPerTimestamp()\"\>"},
     {"\<\"long frameToTimestamp(int, int)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"boolean isCompatible(nounou.data.X)\"\>"},
     {"\<\"boolean isValidChannel(int)\"\>"},
     {"\<\"boolean isValidFrame(int, int)\"\>"},
     {"\<\"scala.collection.immutable.Vector length()\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"void \
nounou$data$xdata$XAbsoluteImmutable$_setter_$xBits_$eq(int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readFrameImpl(int, int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readFrameImpl(int, int, \
scala.collection.immutable.Vector)\"\>"},
     {"\<\"scala.collection.immutable.Vector readFrame(int, int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readFrame(int, int, \
scala.collection.immutable.Vector)\"\>"},
     {"\<\"double readPoint0Abs(int, int)\"\>"},
     {"\<\"int readPoint0(int, int)\"\>"},
     {"\<\"double readPointAbs(int, int, int)\"\>"},
     {"\<\"int readPointImpl(int, int, int)\"\>"},
     {"\<\"int readPoint(int, int, int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readTrace0Abs(int, \
nounou.data.Span)\"\>"},
     {"\<\"nounou.data.Span readTrace0Abs$default$2()\"\>"},
     {"\<\"scala.collection.immutable.Vector readTrace0(int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readTrace0(int, \
nounou.data.Span)\"\>"},
     {"\<\"scala.collection.immutable.Vector readTraceAbs(int, int, \
nounou.data.Span)\"\>"},
     {"\<\"nounou.data.Span readTraceAbs$default$3()\"\>"},
     {"\<\"scala.collection.immutable.Vector readTraceImpl(int, int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readTraceImpl(int, int, \
nounou.data.Span)\"\>"},
     {"\<\"scala.collection.immutable.Vector readTrace(int, int)\"\>"},
     {"\<\"scala.collection.immutable.Vector readTrace(int, int, \
nounou.data.Span)\"\>"},
     {"\<\"double sampleInterval()\"\>"},
     {"\<\"double sampleRate()\"\>"},
     {"\<\"int segments()\"\>"},
     {"\<\"scala.collection.immutable.Vector startTimestamp()\"\>"},
     {"\<\"double timestampsPerFrame()\"\>"},
     {"\<\"scala.Tuple2 timestampToFrame(long)\"\>"},
     {"\<\"double toAbs(int)\"\>"},
     {"\<\"scala.collection.immutable.Vector \
toAbs(scala.collection.immutable.Vector)\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"},
     {"\<\"int xBits()\"\>"},
     {"\<\"double xBitsD()\"\>"},
     {"\<\"nounou.data.X $colon$colon$colon(nounou.data.X)\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.599983330148782*^9}]
}, Open  ]]
},
WindowSize->{716, 867},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 119, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[723, 28, 134, 2, 23, "Print"],
Cell[860, 32, 119, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028, 39, 323, 8, 31, "Input"],
Cell[1354, 49, 261, 5, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1652, 59, 282, 5, 31, "Input"],
Cell[1937, 66, 321, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2295, 78, 184, 3, 31, "Input"],
Cell[2482, 83, 2068, 49, 510, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4587, 137, 176, 4, 31, "Input"],
Cell[4766, 143, 304, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5107, 155, 136, 2, 31, "Input"],
Cell[5246, 159, 3599, 78, 798, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
