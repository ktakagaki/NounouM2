(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     34605,        759]
NotebookOptionsPosition[     31496,        659]
NotebookOutlinePosition[     33201,        705]
CellTagsIndexPosition[     33158,        702]
WindowTitle->Load MiCam images (.GSD) and plot - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["Mathematica",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:NounouM2/guide/NounouM2"],
 StyleBox[" > ", "LinkTrailSeparator"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["NOUNOU M2 TUTORIAL", "PacletNameCell"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox["\<\"URL \[RightGuillemet]\"\>",
       StripOnInput->
        False], {"\<\"NounouM2/tutorial/Load MiCam images (.GSD) and \
plot\"\>":>None, "\<\"Copy Mathematica url\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["NounouM2/tutorial/Load MiCam images (.GSD) and plot"]}, 
           Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web url\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/mathematica/NounouM2/tutorial/\
Load MiCam images (.GSD) and plot.html"], StandardForm]], "Input", 
             TextClipboardType -> "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
           "http://reference.wolfram.com/mathematica/", 
            "NounouM2/tutorial/Load MiCam images (.GSD) and plot", ".html"]], 
          None}]}]},
      Appearance->None,
      MenuAppearance->Automatic]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["Load MiCam images (.GSD) and plot", "Title",
 CellID->509267359],

Cell["XXXX.", "Caption",
 CellID->1891092685],

Cell["Initialize Package", "MathCaption",
 CellID->836781195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "NounouM2`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2058623809],

Cell[CellGroupData[{

Cell[BoxData["\<\"Welcome to NounouM2, the Mathematica interface to nounou!\"\
\>"], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->340329629],

Cell[BoxData["\<\"      ( last updated:  Tue 4 Mar 2014 14:46:40 )\"\>"], \
"Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->455166750],

Cell[BoxData["\<\"      ( current Git HEAD:  \
c1b623a1c1f703ddee3ec7367c20c50915fc6ff2 )\"\>"], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->40054303],

Cell[BoxData["\<\"      ( http://github.org/ktakagaki/nounoum )\"\>"], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->108696449],

Cell[BoxData["\<\"<<Set JLink` java stack size to 6144Mb>>\"\>"], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->262736405]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "will", " ", "allow", " ", "one", " ", "to", " ", "see", " ", 
    "logging", " ", "traces", " ", "and", " ", "errors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"On", " ", "windows"}], ",", " ", 
    RowBox[{
    "the", " ", "content", " ", "of", " ", "these", " ", "logs", " ", "will", 
     " ", "be", " ", "output", " ", "to", " ", "the", " ", "default", " ", 
     "user", " ", "directory", " ", "as", " ", "a", " ", "text", " ", 
     "file"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ShowJavaConsole", "[", "]"}], " "}]], "Input",
 CellLabel->"In[2]:=",
 CellID->558480901],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "com", ".", "wolfram", ".", "jlink", ".", "ui", ".", "ConsoleWindow"}], 
    "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject32279418311278593]], "Output",
 ImageSize->{348, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->33072486]
}, Open  ]],

Cell["Load Data Files", "MathCaption",
 CellID->12996130],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nnDataDirectory", " ", "=", " ", 
  "\"\<E:\\\\data\\\\Micam\\\\dc-stimulation\\\\140224\>\""}]], "Input",
 CellLabel->"In[3]:=",
 CellID->361197007],

Cell[BoxData["\<\"E:\\\\data\\\\Micam\\\\dc-stimulation\\\\140224\"\>"], \
"Output",
 ImageSize->{250, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->339256270]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "$NNReader", " ", "object", " ", "is", " ", "initialized", " ",
     "by", " ", "default", " ", "upon", " ", "calling", " ", 
    RowBox[{"<<", "NounouM2`"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"The", " ", "object", " ", "starts", " ", "out", " ", "empty"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Further", " ", "reader", " ", "objects", " ", "can", " ", "be", " ", 
     "created"}], ",", " ", 
    RowBox[{"using", " ", "the", " ", "Java", " ", "constructor"}], ",", " ", 
    RowBox[{
     RowBox[{
     "but", " ", "beware", " ", "of", " ", "having", " ", "too", " ", "many", 
      " ", "readers", " ", "with", " ", "too", " ", "many", " ", "open", " ", 
      "data", " ", 
      RowBox[{"files", "--"}]}], "-", 
     RowBox[{
     "and", " ", "running", " ", "out", " ", "of", " ", "memory"}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"$NNReader", "@", 
   RowBox[{"load", "[", 
    RowBox[{"nnDataDirectory", "<>", "\"\<\\\\mag140224006A.gsd\>\""}], 
    "]"}]}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->203580105],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"$NNReader", "@", 
    RowBox[{
     RowBox[{"data", "[", "]"}], "@", 
     RowBox[{"readTraceAbsA", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"62", "*", "92"}], "+", "42", "-", "1"}], ",", " ", 
       RowBox[{"NN`frameRangeAll", "[", "]"}]}], "]"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "5"}]}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"72", "*", "8"}]}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->99874959],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
D0bExtY=
    "], {{0, 121}, {576, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{576, 121},
  PlotRange->{{0, 576}, {0, 121}}]], "Output",
 ImageSize->{580, 121},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->350084812]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"$NNReader", "@", 
    RowBox[{
     RowBox[{"dataORI", "[", "]"}], "@", 
     RowBox[{"readTraceAbsA", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"62", "*", "92"}], "+", "42", "-", "1"}], ",", " ", 
       RowBox[{"NN`frameRangeAll", "[", "]"}]}], "]"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "5"}]}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"72", "*", "8"}]}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->416991946],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
D0bExtY=
    "], {{0, 121}, {576, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{576, 121},
  PlotRange->{{0, 576}, {0, 121}}]], "Output",
 ImageSize->{580, 121},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->270974423]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Load MiCam images (.GSD) and plot - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "built" -> "{2014, 3, 11, 14, 59, 15.7039436}", "context" -> "NounouM2`", 
    "keywords" -> {}, "index" -> True, "label" -> "Nounou M2 Tutorial", 
    "language" -> "en", "paclet" -> "NounouM2", "status" -> "None", "summary" -> 
    "XXXX. Initialize Package Load Data Files", "synonyms" -> {}, "title" -> 
    "Load MiCam images (.GSD) and plot", "type" -> "Tutorial", "uri" -> 
    "NounouM2/tutorial/Load MiCam images (.GSD) and plot"}, "LinkTrails" -> 
  "", "SearchTextTranslated" -> ""},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "9.0 for Microsoft Windows (64-bit) (January 25, 2013)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[626, 21, 78, 1, 70, "TutorialColorBar"],
Cell[707, 24, 182, 5, 70, "LinkTrail"],
Cell[892, 31, 1996, 44, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[2913, 79, 70, 1, 70, "Title",
 CellID->509267359],
Cell[2986, 82, 45, 1, 70, "Caption",
 CellID->1891092685],
Cell[3034, 85, 61, 1, 70, "MathCaption",
 CellID->836781195],
Cell[CellGroupData[{
Cell[3120, 90, 97, 3, 70, "Input",
 CellID->2058623809],
Cell[CellGroupData[{
Cell[3242, 97, 157, 3, 70, "Print",
 CellID->340329629],
Cell[3402, 102, 148, 3, 70, "Print",
 CellID->455166750],
Cell[3553, 107, 168, 3, 70, "Print",
 CellID->40054303],
Cell[3724, 112, 143, 2, 70, "Print",
 CellID->108696449],
Cell[3870, 116, 138, 2, 70, "Print",
 CellID->262736405]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4057, 124, 690, 17, 70, "Input",
 CellID->558480901],
Cell[4750, 143, 410, 12, 36, "Output",
 CellID->33072486]
}, Open  ]],
Cell[5175, 158, 57, 1, 70, "MathCaption",
 CellID->12996130],
Cell[CellGroupData[{
Cell[5257, 163, 173, 4, 70, "Input",
 CellID->361197007],
Cell[5433, 169, 215, 6, 36, "Output",
 CellID->339256270]
}, Open  ]],
Cell[5663, 178, 1175, 30, 70, "Input",
 CellID->203580105],
Cell[CellGroupData[{
Cell[6863, 212, 603, 17, 47, "Input",
 CellID->99874959],
Cell[7469, 231, 11663, 199, 133, "Output",
 CellID->350084812]
}, Open  ]],
Cell[CellGroupData[{
Cell[19169, 435, 607, 17, 47, "Input",
 CellID->416991946],
Cell[19779, 454, 11663, 199, 133, "Output",
 CellID->270974423]
}, Open  ]]
}, Open  ]],
Cell[31469, 657, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

